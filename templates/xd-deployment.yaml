apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    appName: {{ include "common.fullname" . }}
    componentName: xd
  labels:
    io.kompose.service: xd
  name: xd
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: xd
  strategy: {}
  template:
    metadata:
      annotations:
        appName: {{ include "common.fullname" . }}
        componentName: xd
      labels:
        io.kompose.service: xd
    spec:
      initContainers:
        - name: init-wait-for-rabbitmq
          image: curlimages/curl:latest
          command:
            - '/bin/sh'
            - '-c'
            - >
              set -ex;
              until curl --fail --connect-timeout 5 -L -u {{ .Values.app.rabbitmq.user }}:{{ .Values.app.rabbitmq.password }} http://rabbitmq:{{ .Values.app.rabbitmq.port2 }}/api/healthchecks/node; do sleep 2; done
        - name: init-wait-for-config-service
          image: alpine:latest
          command: [ "sh", "-c", "for i in $(seq 1 300); do nc -zvw1 config-service {{ .Values.app.configService.port }} && exit 0 || sleep 3; done; exit 1" ]
      containers:
        - env:
            - name: CLOUD_CONFIG
              value: "false"
            - name: CONFIG_SERVICE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: direct-secrets
                  key: config-service-password
            - name: RABBIT_MQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: direct-secrets
                  key: rabbitmq-password
          envFrom:
            - configMapRef:
                name: xd-configmap
          image: xd:latest
          imagePullPolicy: Never
          name: xd
          ports:
            - containerPort: {{  .Values.app.xd.port }}
          resources: {}
          livenessProbe:
            httpGet:
              path: "{{ .Values.app.xd.livenessProbe.path}}"
              port: {{ .Values.app.xd.port }}
            initialDelaySeconds: {{ .Values.app.xd.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.xd.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.app.xd.livenessProbe.timeoutSeconds }}
      restartPolicy: Always
status: {}
